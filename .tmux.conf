set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Restore Vim sessions
set -g @resurrect-strategy-vim 'session'
# Restore Neovim sessions
set -g @resurrect-strategy-nvim 'session'
# Restore Panes
set -g @resurrect-capture-pane-contents 'on'
# Restore last saved environment (automatically)
set -g @continuum-restore 'on'

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# 256 colors display
set-option -g default-terminal "screen-256color"
set-option -g terminal-overrides "screen-256color"

# command delay? We don't want that, make it short
set -g escape-time 10

# Swap window faster
bind-key -n C-S-left swap-window -t -1\; select-window -t -1
bind-key -n C-S-right swap-window -t +1\; select-window -t +1

# Set prefix key to c-a instead of default c-b
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Highlight active window
set -g status-style bg=colour235,fg=colour253
set -g window-status-current-style bg=colour111,fg=colour235

# Custom title
set -g pane-border-format "#{pane_index} #{b:pane_current_path}: #T:#{pane_pid}"

# Enable names for panes
# Auto hide pane-border-status line when only one pane is displayed (see tmux/tmux#566)
set-hook -g 'after-new-window'   'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g 'after-kill-pane'    'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g 'pane-exited'        'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
## Smart name for panes, hidden when zoomed or when only have 1 pane
set-hook -g 'after-resize-pane' 'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set pane-border-status off; else tmux set pane-border-status top; fi"'
set-hook -g 'window-pane-changed' 'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set pane-border-status off; else tmux set pane-border-status top; fi"'

# Split panes using | and -
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
unbind '"'
unbind %

# VIM movement between panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Resize panes similar to VIM
bind -r L resize-pane -R 8
bind -r H resize-pane -L 8
bind -r K resize-pane -U 8
bind -r J resize-pane -D 8

# Reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.config/.tmux.conf \; display-message "~/.tmux.conf reloaded" \;

# Use vim keybindings in copy mode
setw -g mode-keys vi
bind Space copy-mode
bind C-Space copy-mode
bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi 'V' send -X select-line
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'perl -0 -pe "s/\n\Z//" | pbcopy'
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'perl -0 -pe "s/\n\Z//" | pbcopy'

# Status bar.
set -g status-bg '#343d46'
set -g status-fg white
set -g status-left-length 40
set -g status-left '#[fg=yellow]#S â§‰ '
set -g status-right "#[fg=yellow]$USER@#h #[fg=magenta]%l:%M %p"
set -g status-interval 60 # Default is 15.

# Fast toggle (normally prefix-l).
bind ^space last-window

# Automatically renumber window numbers on closing a pane (tmux >= 1.7).
set -g renumber-windows on

# Mouse can be used to select panes, select windows (by clicking on the status
# bar), resize panes. For default bindings see `tmux list-keys` and `tmux
# list-keys -t vi-copy`.
set -g mouse on
